

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (5 June 2023 20:53:14) as C:\Cuis2\windows64\CuisUniversity-5832.image!


----End fileIn of C:\windows64\repoInge1\08-MarsRover-ElRegreso\MarsRover-WithHeading.st----!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624825!
headSouth
	
	head := MarsRoverHeadingSouth for: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624883!
moveSouth
	
	position := position + (0@-1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624914!
updateHeadingObservers
	observers do: [ :obs | obs addHeading: head name ]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624887!
moveWest
	
	position := position + (-1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624861!
isRotateRightCommand: aCommand

	^aCommand = $r! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624891!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624805!
signalInvalidCommand
	
	self error: self invalidCommandErrorDescription ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624857!
isRotateLeftCommand: aCommand

	^aCommand = $l! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624821!
headNorth
	
	head := MarsRoverHeadingNorth for: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624897!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624853!
isForwardCommand: aCommand

	^aCommand = $f ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624870!
moveEast
	
	position := position + (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624874!
moveForward
	
	head moveForward.
	self updatePositionObservers.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624849!
isBackwardCommand: aCommand

	^aCommand = $b! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624829!
headWest
	
	head := MarsRoverHeadingWest for: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624865!
moveBackward
	
	head moveBackward.
	self updatePositionObservers.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624879!
moveNorth
	
	position := position + (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624910!
addObserver: anObserver
	observers add: anObserver.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624817!
headEast
	
	head := MarsRoverHeadingEast for: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624919!
updatePositionObservers
	observers do: [ :obs | obs addPosition: position ]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624843!
isAt: aPosition heading: aHeadingType

	^position = aPosition and: [ head isHeading: aHeadingType ]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624833!
rotateLeft
	
	head rotateLeft.
	self updateHeadingObservers.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624801!
invalidCommandErrorDescription
	
	^'Invalid command'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624838!
rotateRight
	
	head rotateRight.
	self updateHeadingObservers.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624810!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	observers := OrderedCollection new.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624933!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624960!
isHeading: aHeadingType

	^self isKindOf: aHeadingType ! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624969!
moveForward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624965!
moveBackward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624973!
initializeFor: aMarsRover 
	
	marsRover := aMarsRover.! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624952!
rotateLeft

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624956!
rotateRight

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624978 overrides: 16903442!
name

	self subclassResponsibility ! !
!MarsRoverHeading class methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624991!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !
!MarsRoverHeadingAndPositionLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625230 overrides: 50625191!
addHeading: aHeading
	log addLast: aHeading! !
!MarsRoverHeadingAndPositionLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625235 overrides: 50625196!
addPosition: aPosition
	log addLast: aPosition ! !
!MarsRoverHeadingAndPositionWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625344 overrides: 50625319!
addHeading: aHeading 
	heading := aHeading.! !
!MarsRoverHeadingAndPositionWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625349 overrides: 50625324!
addPosition: aPosition 
	position := aPosition.! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625015 overrides: 50625560!
moveForward
	
	^marsRover moveEast! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625010 overrides: 50625565!
moveBackward
	
	^marsRover moveWest! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625020 overrides: 50625575!
rotateLeft
	
	^marsRover headNorth! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625025 overrides: 50625580!
rotateRight
	
	^marsRover headSouth! !
!MarsRoverHeadingEast methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625030 overrides: 50625586!
name

	^'East'.! !
!MarsRoverHeadingLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625253 overrides: 50625191!
addHeading: aHeading
	log addLast: aHeading! !
!MarsRoverHeadingLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625258 overrides: 50625196!
addPosition: aPosition! !
!MarsRoverHeadingNorth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625053 overrides: 50625560!
moveForward
	
	^marsRover moveNorth! !
!MarsRoverHeadingNorth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625048 overrides: 50625565!
moveBackward
	
	^marsRover moveSouth! !
!MarsRoverHeadingNorth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625058 overrides: 50625575!
rotateLeft
	
	^marsRover headWest! !
!MarsRoverHeadingNorth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625063 overrides: 50625580!
rotateRight
	
	^marsRover headEast! !
!MarsRoverHeadingNorth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625068 overrides: 50625586!
name

	^'North'.! !
!MarsRoverHeadingSouth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625091 overrides: 50625560!
moveForward
	
	^marsRover moveSouth! !
!MarsRoverHeadingSouth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625086 overrides: 50625565!
moveBackward
	
	^marsRover moveNorth! !
!MarsRoverHeadingSouth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625096 overrides: 50625575!
rotateLeft
	
	^marsRover headEast! !
!MarsRoverHeadingSouth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625101 overrides: 50625580!
rotateRight
	
	^marsRover headWest! !
!MarsRoverHeadingSouth methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625106 overrides: 50625586!
name

	^'South'.! !
!MarsRoverHeadingWest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625129 overrides: 50625560!
moveForward
	
	^marsRover moveWest! !
!MarsRoverHeadingWest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625124 overrides: 50625565!
moveBackward

	^marsRover moveEast! !
!MarsRoverHeadingWest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625134 overrides: 50625575!
rotateLeft
	
	^marsRover headSouth! !
!MarsRoverHeadingWest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625139 overrides: 50625580!
rotateRight
	
	^marsRover headNorth! !
!MarsRoverHeadingWest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625144 overrides: 50625586!
name

	^'West'.! !
!MarsRoverHeadingWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625368 overrides: 50625319!
addHeading: aHeading 
	heading := aHeading.! !
!MarsRoverHeadingWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625373 overrides: 50625324!
addPosition: aPosition ! !
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625160!
addHeading: aHeading
	self subclassResponsibility ! !
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625164!
addPosition: aPosition
	self subclassResponsibility ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624395!
test02MarsRoverSupportsMultipleObservers

	| rover observer1 observer2 result |
	
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	observer1 := MarsRoverHeadingAndPositionLog new.
	observer2 := MarsRoverHeadingAndPositionLog new.
	
	rover addObserver: observer1.
	rover addObserver: observer2.
	
	rover process: 'fr'.
	
	result := OrderedCollection new.
	result add: 0@1.
	result add: 'East'.
	
	self assert: result equals: observer1 show.
	self assert: result equals: observer2 show.! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624380!
test01MarsRoverSupportsOneObserver

	| rover observer1 result |
	
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	observer1 := MarsRoverHeadingAndPositionLog new.
	
	rover addObserver: observer1.
	
	rover process: 'fr'.
	
	result := OrderedCollection new.
	result add: 0@1.
	result add: 'East'.
	
	self assert: result equals: observer1 show.! !
!MarsRoverPositionLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625276 overrides: 50625191!
addHeading: aHeading! !
!MarsRoverPositionLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625280 overrides: 50625196!
addPosition: aPosition
	log addLast: aPosition! !
!MarsRoverPositionWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625391 overrides: 50625319!
addHeading: aHeading ! !
!MarsRoverPositionWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625395 overrides: 50625324!
addPosition: aPosition 
	position := aPosition.! !
!MarsRoverStateLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625182!
show
	^log.! !
!MarsRoverStateLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625186 overrides: 16920235!
initialize
	log := OrderedCollection new.! !
!MarsRoverStateLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625191 overrides: 50625759!
addHeading: aHeading 
	self subclassResponsibility ! !
!MarsRoverStateLog methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625196 overrides: 50625764!
addPosition: aPosition
	self subclassResponsibility ! !
!MarsRoverStateLog class methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50625210!
for: aLoggingOption 
	^self new initializeFor: aLoggingOption ! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624427!
test01MarsRoverLogIsEmptyWhenInitialized

	| log rover |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	self assert: log show isEmpty.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624505!
test07MarsRoverLogsHeadingWhenRotatedFullLeft

	| log rover result |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'llll'.
	
	result := OrderedCollection new.
	result add: 'West'.
	result add: 'South'.
	result add: 'East'.
	result add: 'North'.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624521!
test08MarsRoverOnlyLogsPosition

	| log rover result |

	log := MarsRoverPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'fr'.
	
	result := OrderedCollection new.
	result add: 0@1.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:55' prior: 50624534!
test09MarsRoverOnlyLogsHeading

	| log rover result |

	log := MarsRoverHeadingLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'fr'.
	
	result := OrderedCollection new.
	result add: 'East'.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624489!
test06MarsRoverLogsHeadingWhenRotatedFullRight

	| log rover result |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'rrrr'.
	
	result := OrderedCollection new.
	result add: 'East'.
	result add: 'South'.
	result add: 'West'.
	result add: 'North'.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624437!
test02MarsRoverLogsPositionWhenMovedForward

	| log rover result |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'f'.
	
	result := OrderedCollection new.
	result add: 0@1.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624450!
test03MarsRoverLogsPositionsWhenMovedBackward

	| log rover result |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'b'.
	
	result := OrderedCollection new.
	result add: 0@-1.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624463!
test04MarsRoverLogsHeadingWhenRotatedRight

	| log rover result |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'r'.
	
	result := OrderedCollection new.
	result add: 'East'.
	
	self assert: result equals: log show.! !
!MarsRoverStateLogTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624476!
test05MarsRoverLogsHeadingWhenRotatedLeft

	| log rover result |

	log := MarsRoverHeadingAndPositionLog new.
	rover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.
	
	rover addObserver: log.
	
	rover process: 'l'.
	
	result := OrderedCollection new.
	result add: 'West'.
	
	self assert: result equals: log show.! !
!MarsRoverStateWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50625299!
show
	| window |
	
	window := SystemWindow new.
	
	window setLabel: 'MarsRoverStateWindow'.
	
	window addMorph: (LabelMorph contents: ('Posición: ', position asString)).
	window addMorph: (LabelMorph contents: ('Apuntando al ', heading asString)).
	
	window openInWorld.! !
!MarsRoverStateWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50625315!
position
	^position! !
!MarsRoverStateWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50625319 overrides: 50625759!
addHeading: aHeading
	self subclassResponsibility ! !
!MarsRoverStateWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50625311!
heading
	^heading! !
!MarsRoverStateWindow methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50625324 overrides: 50625764!
addPosition: aPosition
	self subclassResponsibility ! !
!MarsRoverStateWindowTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624584!
test03MarsRoverWindowShowsLastHeading

	| window rover |

	window := MarsRoverHeadingAndPositionWindow new.
	rover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	rover addObserver: window.
	
	rover process: 'lr'.
	
	self assert: 'North' equals: window heading.! !
!MarsRoverStateWindowTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624596!
test04MarsRoverWindowOnlyTracksPosition

	| window rover |

	window := MarsRoverPositionWindow new.
	rover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	rover addObserver: window.
	
	rover process: 'fr'.
	
	self assert: 1@2 equals: window position.! !
!MarsRoverStateWindowTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624572!
test02MarsRoverWindowShowsLastPosition

	| window rover |

	window := MarsRoverHeadingAndPositionWindow new.
	rover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	rover addObserver: window.
	
	rover process: 'f'.
	
	self assert: 1@2 equals: window position.! !
!MarsRoverStateWindowTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624560!
test01MarsRoverWindowIsEmptyWhenInitialized

	| window rover |

	window := MarsRoverHeadingAndPositionWindow new.
	rover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	rover addObserver: window.
	
	self assert: window position isNil.
	self assert: window heading isNil.! !
!MarsRoverStateWindowTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624607!
test05MarsRoverWindowOnlyTracksHeading

	| window rover |

	window := MarsRoverHeadingWindow new.
	rover := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	
	rover addObserver: window.
	
	rover process: 'fr'.
	
	self assert: 'East' equals: window heading.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624771!
west

	^ MarsRoverHeadingWest ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624630!
test01DoesNotMoveWhenNoCommand

	self 
		assertIsAt: 1@2 
		heading: self north 
		afterProcessing: '' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624662!
test06DecrementsYAfterMovingBackwardsWhenHeadingNorth

	self 
		assertIsAt: 1@1 
		heading: self north 
		afterProcessing: 'b' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624717!
test12DecrementsXAfterMovingBackwardWhenHeadingEast

	self 
		assertIsAt: 0@2 
		heading: self east 
		afterProcessing: 'b' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624767!
south

	^ MarsRoverHeadingSouth ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624646!
test03IsAtFailsForDifferentHeading

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@1 heading: self south)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624670!
test07PointToEashAfterRotatingRightWhenHeadingNorth

	self 
		assertIsAt: 1@2 
		heading: self east 
		afterProcessing: 'r' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624701!
test10CanProcessMoreThanOneCommand

	self 
		assertIsAt: 1@4 
		heading: self north 
		afterProcessing: 'ff' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624678!
test08PointsToWestAfterRotatingLeftWhenPointingNorth

	self 
		assertIsAt: 1@2 
		heading: self west 
		afterProcessing: 'l' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624741!
test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth

	self 
		assertIsAt: 1@1 
		heading: self west 
		afterProcessing: 'ffblrr' 
		whenStartingAt: 1@2 
		heading: self south 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624750!
test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest

	self 
		assertIsAt: 0@2 
		heading: self north 
		afterProcessing: 'ffblrr' 
		whenStartingAt: 1@2 
		heading: self west 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624759!
east

	^ MarsRoverHeadingEast ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624725!
test13PointsToSouthAfterRotatingRightWhenHeadingEast

		self 
		assertIsAt: 1@2 
		heading: self south 
		afterProcessing: 'r' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624654!
test04IncrementsYAfterMovingForwardWhenHeadingNorth

	self 
		assertIsAt: 1@3 
		heading: self north 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624733!
test14PointsToNorthAfterRotatingLeftWhenPointingEast

		self 
		assertIsAt: 1@2 
		heading: self north 
		afterProcessing: 'l' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624638!
test02IsAtFailsForDifferentPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@2 heading: self north)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624709!
test11IncrementsXAfterMovingForwareWhenHeadingEast

	self 
		assertIsAt: 2@2 
		heading: self east 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624763!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624775!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	
	marsRover process: commands.
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'MS 6/5/2023 20:57:56' prior: 50624686!
test09DoesNotProcessInvalidCommand

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: self north.
	
	self 
		should: [ marsRover process: 'x' ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: marsRover invalidCommandErrorDescription.
			self assert: (marsRover isAt: 1@2 heading: self north) ]! !

!testRun: #MarsRoverObserverTest #test01MarsRoverSupportsOneObserver stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverObserverTest #test02MarsRoverSupportsMultipleObservers stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test01MarsRoverLogIsEmptyWhenInitialized stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test02MarsRoverLogsPositionWhenMovedForward stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test03MarsRoverLogsPositionsWhenMovedBackward stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test04MarsRoverLogsHeadingWhenRotatedRight stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test05MarsRoverLogsHeadingWhenRotatedLeft stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test06MarsRoverLogsHeadingWhenRotatedFullRight stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test07MarsRoverLogsHeadingWhenRotatedFullLeft stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test08MarsRoverOnlyLogsPosition stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateLogTest #test09MarsRoverOnlyLogsHeading stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateWindowTest #test01MarsRoverWindowIsEmptyWhenInitialized stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateWindowTest #test02MarsRoverWindowShowsLastPosition stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateWindowTest #test03MarsRoverWindowShowsLastHeading stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateWindowTest #test04MarsRoverWindowOnlyTracksPosition stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverStateWindowTest #test05MarsRoverWindowOnlyTracksHeading stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'MS 6/5/2023 21:07:57'!
PASSED!

----STARTUP---- (8 June 2023 10:27:23) as C:\Cuis2\windows64\CuisUniversity-5832.image!


Object subclass: #Carrito
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!

!classDefinition: #Carrito category: 'TusLibros.com' stamp: 'ms 6/8/2023 10:57:41'!
Object subclass: #Carrito
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!

TestCase subclass: #CarritoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!

!classDefinition: #CarritoTest category: 'TusLibros.com' stamp: 'ms 6/8/2023 10:57:56'!
TestCase subclass: #CarritoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!
!CarritoTest methodsFor: 'nil' stamp: 'ms 6/8/2023 10:58:53'!
test01CartEmptyWhenCreated
	
	| carrito |
	carrito := Carrito new.
	
	self assert: carrito isEmpty.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 10:58:55'!
ERROR!
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 10:59:30' prior: 50626383!
test01CartEmptyWhenCreated
	
	| carrito |
	carrito := Carrito new.
	
	self assert: carrito elementos isEmpty.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 10:59:32'!
ERROR!
!Carrito methodsFor: 'elementos' stamp: 'ms 6/8/2023 10:59:40'!
elementos
	self shouldBeImplemented.! !
!Carrito methodsFor: 'elementos' stamp: 'ms 6/8/2023 10:59:54' prior: 50626401!
elementos
	^OrderedCollection new.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 10:59:57'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 10:59:57'!
PASSED!

!classDefinition: #ItemBook category: 'TusLibros.com' stamp: 'ms 6/8/2023 11:04:17'!
Object subclass: #ItemBook
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:04:07'!
test01CartContainsOneItem
	
	| carrito item |
	carrito := Carrito new.
	item := ItemBook initializeWithIsbn: 'hola' quantity:  2.
	carrito addToCart: item.
	
	self assert: carrito elementos first equals: item.! !
!ItemBook class methodsFor: 'nil' stamp: 'ms 6/8/2023 11:05:33'!
initializeWithIsbn: aIsbn quantity:  aQuantity.
	^self new initializeWithIsbn: aIsbn quantity:  aQuantity.
! !
!ItemBook class methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:05:49'!
WithIsbn: aIsbn quantity:  aQuantity.
	^self new initializeWithIsbn: aIsbn quantity:  aQuantity.
! !
!ItemBook class methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:05:49' prior: 50626430!
initializeWithIsbn: aIsbn quantity:  aQuantity.
	^self new WithIsbn: aIsbn quantity:  aQuantity.
! !
!ItemBook class methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:05:49' prior: 50626436!
WithIsbn: aIsbn quantity:  aQuantity.
	^self new WithIsbn: aIsbn quantity:  aQuantity.
! !

!methodRemoval: ItemBook class #initializeWithIsbn:quantity: stamp: 'ms 6/8/2023 11:05:49'!
initializeWithIsbn: aIsbn quantity:  aQuantity.
	^self new WithIsbn: aIsbn quantity:  aQuantity.
!
!ItemBook class methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:05:55'!
withIsbn: aIsbn quantity:  aQuantity.
	^self new WithIsbn: aIsbn quantity:  aQuantity.
! !

!methodRemoval: ItemBook class #WithIsbn:quantity: stamp: 'ms 6/8/2023 11:06:02'!
WithIsbn: aIsbn quantity:  aQuantity.
	^self new WithIsbn: aIsbn quantity:  aQuantity.
!
!ItemBook class methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:06:11' prior: 50626462!
withIsbn: aIsbn quantity:  aQuantity.
	^self new initializeWithIsbn: aIsbn quantity:  aQuantity.
! !
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:06:37' prior: 50626421!
test01CartContainsOneItem
	
	| carrito item |
	carrito := Carrito new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	carrito addToCart: item.
	
	self assert: carrito elementos first equals: item.! !
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'ms 6/8/2023 11:06:41'!
test02CartContainsOneItem
	
	| carrito item |
	carrito := Carrito new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	carrito addToCart: item.
	
	self assert: carrito elementos first equals: item.! !

!methodRemoval: CarritoTest #test01CartContainsOneItem stamp: 'ms 6/8/2023 11:06:43'!
test01CartContainsOneItem
	
	| carrito item |
	carrito := Carrito new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	carrito addToCart: item.
	
	self assert: carrito elementos first equals: item.!

!classDefinition: #ItemBook category: 'TusLibros.com' stamp: 'ms 6/8/2023 11:07:27'!
Object subclass: #ItemBook
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!

!classDefinition: #ItemBook category: 'TusLibros.com' stamp: 'ms 6/8/2023 11:07:29'!
Object subclass: #ItemBook
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!
!ItemBook methodsFor: 'nil' stamp: 'ms 6/8/2023 11:07:26'!
initializeWithIsbn: aIsbn quantity:  aQuantity
	isbn := aIsbn.
	quantity := aQuantity.! !

!classDefinition: #Carrito category: 'TusLibros.com' stamp: 'ms 6/8/2023 11:08:40'!
Object subclass: #Carrito
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:08:38'!
addToCart: aItemBook
	items add: aItemBook.! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:08:47' prior: 50626405!
elementos
	^items! !
!Carrito methodsFor: 'initialize' stamp: 'ms 6/8/2023 11:09:16' overrides: 16920235!
initialize
	items := OrderedCollection new.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:09:18'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:09:18'!
PASSED!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:12:09'!
test03ListAllImtemsOfCart
	
	| carrito item item2 item3 itemsCollection|
	carrito := Carrito new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	item3 := ItemBook withIsbn: 'buenas' quantity:  1.

	carrito addToCart: item.
	carrito addToCart: item2.
	carrito addToCart: item3.
	
	itemsCollection := 	OrderedCollection new.
	itemsCollection add: item.
	itemsCollection add: item2.
	itemsCollection add: item3.
	
	self assert: carrito elementos equals: itemsCollection.! !

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:12:10'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:12:10'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:12:10'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:12:10'!
PASSED!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:14:42' prior: 50626552!
test03ListAllImtemsOfCart
	
	| carrito item item2 item3 itemsCollection|
	carrito := Carrito new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	item3 := ItemBook withIsbn: 'buenas' quantity:  1.

	carrito addToCart: item.
	carrito addToCart: item2.
	carrito addToCart: item3.
	
	itemsCollection := 	OrderedCollection new.
	itemsCollection add: item.
	itemsCollection add: item2.
	itemsCollection add: item3.
	
	self assert: carrito elementos equals: itemsCollection.! !
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:16:55'!
test04CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ItemBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	

	carrito addToCart: item3.
	! !

!classDefinition: #ListBook category: 'TusLibros.com' stamp: 'ms 6/8/2023 11:18:12'!
Object subclass: #ListBook
	instanceVariableNames: 'itemsCreated'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros.com'!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:17:55' prior: 50626602!
test04CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	

	carrito addToCart: item3.
	! !
!ListBook methodsFor: 'adding' stamp: 'ms 6/8/2023 11:19:00'!
createItem: aItemBook.
	itemsCreated add: aItemBook.
! !
!ListBook methodsFor: 'initialize' stamp: 'ms 6/8/2023 11:19:42' overrides: 16920235!
initialize
	itemsCreated := OrderedCollection new.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:19:52'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:19:54'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:19:55'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:19:56'!
PASSED!

----SNAPSHOT----(8 June 2023 11:20:31) CuisUniversity-5832.image priorSource: 9366758!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:22:12' prior: 50626624!
test04CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	

	self 

		should: [	carrito addToCart: item3.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: carrito invalidItemErrorDescription.
		 ]

	! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:23:10' prior: 50626534!
addToCart: aItemBook
	self assertItemBookIsCreated.
	items add: aItemBook.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:23:16'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:23:16'!
ERROR!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:23:16'!
ERROR!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:23:16'!
ERROR!
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:23:53'!
assertItemBookIsCreated: aItemBook
	! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:24:27' prior: 50626682!
addToCart: aItemBook
	self assertItemBookIsCreated: aItemBook.
	items add: aItemBook.! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:24:37' prior: 50626702!
addToCart: aItemBook
	self assertItemBookIsCreated: aItemBook.
	items add: aItemBook.! !
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:25:02' prior: 50626698!
assertItemBookIsCreated: aItemBook
	! !
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:27:36' prior: 50626583!
test03ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 itemsCollection|
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	


	carrito addToCart: item.
	carrito addToCart: item2.
	carrito addToCart: item3.
	
	itemsCollection := 	OrderedCollection new.
	itemsCollection add: item.
	itemsCollection add: item2.
	itemsCollection add: item3.
	
	self assert: carrito elementos equals: itemsCollection.! !
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:28:13' prior: 50626718!
test03ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item.
	carrito addToCart: item2.
	carrito addToCart: item3.
	
	self assert: carrito elementos equals: itemsList items.! !
!ListBook methodsFor: 'accessing' stamp: 'ms 6/8/2023 11:28:42'!
items
	^itemsCreated ! !

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:28:44'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:28:46'!
PASSED!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:29:31' prior: 50626490!
test02CartContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item.
	
	
	
	self assert: carrito elementos first equals: item.! !

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:29:54'!
FAILURE!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:31:41' prior: 50626662!
test04CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: carrito invalidItemErrorDescription.
		 ]

	! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:31:57'!
addToCart: aItemBook inItemList: aList
	self assertItemBookIsCreated: aItemBook.
	items add: aItemBook.! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:32:13'!
addToCart: aItemBook inList: aList
	self assertItemBookIsCreated: aItemBook.
	items add: aItemBook.! !

!methodRemoval: Carrito #addToCart:inItemList: stamp: 'ms 6/8/2023 11:32:14'!
addToCart: aItemBook inItemList: aList
	self assertItemBookIsCreated: aItemBook.
	items add: aItemBook.!
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:32:27' prior: 50626807!
addToCart: aItemBook inList: aList
	self assertItemBookIsCreated: aItemBook inList: aList .
	items add: aItemBook.! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:32:29' prior: 50626819!
addToCart: aItemBook inList: aList
	self assertItemBookIsCreated: aItemBook inList: aList.
	items add: aItemBook.! !
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:32:53'!
assertItemBookIsCreated: aItemBook inList: aList
	! !

!methodRemoval: Carrito #assertItemBookIsCreated: stamp: 'ms 6/8/2023 11:32:55'!
assertItemBookIsCreated: aItemBook
	!
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:33:47' prior: 50626832!
assertItemBookIsCreated: aItemBook inList: aList
	^aList includes: aItemBook! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:35:18' prior: 50626826!
addToCart: aItemBook inList: aList
	(self assertItemBookIsCreated: aItemBook inList: aList) 
	ifTrue: 
	[ items add: aItemBook. ]
	ifFalse: [
		self error: self invalid
		].
	! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:35:32' prior: 50626845!
addToCart: aItemBook inList: aList
	(self assertItemBookIsCreated: aItemBook inList: aList) 
	ifTrue: 
	[ items add: aItemBook. ]
	ifFalse: [
		self error: self invalidItemErrorDescription
		].
	! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:35:50' prior: 50626854!
addToCart: aItemBook inList: aList
	(self assertItemBookIsCreated: aItemBook inList: aList) 
		ifTrue: [ items add: aItemBook. ]
		ifFalse: [	 ^self error: self invalidItemErrorDescription].
	! !
!Carrito class methodsFor: 'error' stamp: 'ms 6/8/2023 11:36:25'!
invalidItemErrorDescription
	^'El Item no esta creado'! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:36:40' prior: 50626708!
addToCart: aItemBook
	items add: aItemBook.! !
!Carrito methodsFor: 'elements' stamp: 'ms 6/8/2023 11:36:46' prior: 50626863!
addToCart: aItemBook inList: aList
	(self assertItemBookIsCreated: aItemBook inList: aList) 
		ifTrue: [ items add: aItemBook. ]
		ifFalse: [	 ^self error: self class invalidItemErrorDescription].
	! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:36:47'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:36:47'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:36:47'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:36:47'!
ERROR!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:36:47'!
ERROR!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:36:59'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:37:01'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:37:01'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:37:03'!
ERROR!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:37:03'!
ERROR!
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:37:37' prior: 50626840!
assertItemBookIsCreated: aItemBook inList: aList
	^(aList includes: aItemBook)! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:37:38'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:37:38'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:37:38'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:37:38'!
ERROR!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:37:38'!
ERROR!
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:38:04' prior: 50626919!
assertItemBookIsCreated: aItemBook inList: aList
	^(aList  includes: aItemBook)! !
!Carrito methodsFor: 'private' stamp: 'ms 6/8/2023 11:38:19' prior: 50626939!
assertItemBookIsCreated: aItemBook inList: aList
	^(aList items includes: aItemBook)! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:38:19'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:38:19'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:38:19'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:38:19'!
ERROR!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:38:19'!
ERROR!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:39:05' prior: 50626781!
test04CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	! !

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:39:06'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:39:06'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:39:06'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:39:06'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:39:06'!
PASSED!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:39:27' prior: 50626739!
test03ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item inList: itemsList.
	carrito addToCart: item2 inList: itemsList.
	carrito addToCart: item3 inList: itemsList.
	
	self assert: carrito elementos equals: itemsList items.! !

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:39:28'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:39:28'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:39:28'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:39:28'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:39:28'!
PASSED!
!CarritoTest methodsFor: 'test' stamp: 'ms 6/8/2023 11:39:32' prior: 50626766!
test02CartContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item inList: itemsList.
	
	
	
	self assert: carrito elementos first equals: item.! !

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:39:33'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'ms 6/8/2023 11:39:33'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'ms 6/8/2023 11:39:34'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'ms 6/8/2023 11:39:34'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'ms 6/8/2023 11:39:34'!
PASSED!

----SNAPSHOT----(8 June 2023 11:39:43) CuisUniversity-5832.image priorSource: 9440258!

----STARTUP---- (8 June 2023 12:48:38) as /home/tomas/Downloads/cuis-2023-6-8/CuisUniversity-5832.image!


----End fileIn of /home/tomas/Downloads/cuis-2023-6-8/TusLibros.com.st----!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 12:52:38'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 12:52:38'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 12:52:38'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 12:52:38'!
PASSED!

----SNAPSHOT----(8 June 2023 13:30:01) CuisUniversity-5832.image priorSource: 9453136!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:34:18'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 13:34:18'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 13:34:18'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:34:18'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:34:32' prior: 50627061!
test01CartEmptyWhenCreated
	
	| carrito |
	carrito := Carrito new.
	
	self assert: carrito isEmpty.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:34:33'!
ERROR!
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 13:34:53'!
isEmpty
	self shouldBeImplemented.! !
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 13:35:13' prior: 50627263!
isEmpty
	^self elementos isEmpty.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:35:30'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:35:30'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 13:35:30'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 13:35:30'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:35:30'!
PASSED!

!classDefinition: #BookMarket category: 'TusLibros' stamp: 'TM 6/8/2023 13:47:13'!
Object subclass: #BookMarket
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:47:06' prior: 50627255!
test01CartEmptyWhenCreated
	
	| market carrito |
	
	market := BookMarket new.
	carrito := Carrito for: market.
	
	self assert: carrito isEmpty.! !

Object subclass: #Market
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Market category: 'TusLibros' stamp: 'TM 6/8/2023 13:47:20'!
Object subclass: #Market
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Market subclass: #BookMarket
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #BookMarket category: 'TusLibros' stamp: 'TM 6/8/2023 13:47:27'!
Market subclass: #BookMarket
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:47:58'!
ERROR!
!Carrito class methodsFor: 'instance creation' stamp: 'TM 6/8/2023 13:48:07'!
for: aBookMarket 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aBookMarket ! !
!Carrito class methodsFor: 'instance creation' stamp: 'TM 6/8/2023 13:48:26' prior: 50627323!
for: aMarket 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aMarket ! !
!Carrito class methodsFor: 'instance creation' stamp: 'TM 6/8/2023 13:48:43' prior: 50627331!
for: aMarket 
	^self new initializeFor: aMarket ! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:48:52'!
ERROR!

!classDefinition: #Carrito category: 'TusLibros' stamp: 'TM 6/8/2023 13:49:02'!
Object subclass: #Carrito
	instanceVariableNames: 'items market'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Carrito methodsFor: 'initialize' stamp: 'TM 6/8/2023 13:49:02'!
initializeFor: aMarket 
	self shouldBeImplemented.
	market := aMarket.! !
!Carrito methodsFor: 'initialize' stamp: 'TM 6/8/2023 13:49:14' prior: 50627353!
initializeFor: aMarket 
	market := aMarket.! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:49:17'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:49:17'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 13:49:17'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 13:49:17'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:49:17'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:49:24' prior: 50627292!
test01CartEmptyWhenCreated
	
	| market carrito |
	
	market := BookMarket new.
	carrito := Carrito for: market.
	
	self assert: carrito isEmpty! !

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:49:25'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:49:25'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 13:49:25'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 13:49:25'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:49:25'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:49:30'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:49:30'!
PASSED!

!testRun: #CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 13:49:30'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 13:49:31'!
PASSED!

!testRun: #CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:49:31'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:53:45'!
test04CartContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item inList: itemsList.
	
	
	
	self assert: carrito elementos first equals: item.! !

!methodRemoval: CarritoTest #test02CartContainsOneItem stamp: 'TM 6/8/2023 13:53:45'!
test02CartContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item inList: itemsList.
	
	
	
	self assert: carrito elementos first equals: item.!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:53:51'!
test02CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	! !

!methodRemoval: CarritoTest #test04CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:53:51'!
test04CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:57:08'!
test02CannotAddItemNotListedInMarket
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	! !

!testRun: #CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 13:57:08'!
PASSED!

!testRun: #CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:57:08'!
PASSED!

!testRun: #CarritoTest #test02CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:57:08'!
PASSED!

!testRun: #CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 13:57:08'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 13:57:08'!
PASSED!

!testRun: #CarritoTest #test04CartContainsOneItem stamp: 'TM 6/8/2023 13:57:08'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:58:08'!
test01CartIsEmptyWhenCreated
	
	| market carrito |
	
	market := BookMarket new.
	carrito := Carrito for: market.
	
	self assert: carrito isEmpty! !

!methodRemoval: CarritoTest #test01CartEmptyWhenCreated stamp: 'TM 6/8/2023 13:58:08'!
test01CartEmptyWhenCreated
	
	| market carrito |
	
	market := BookMarket new.
	carrito := Carrito for: market.
	
	self assert: carrito isEmpty!

!methodRemoval: CarritoTest #test02CanNotAddItemNotCreated stamp: 'TM 6/8/2023 13:58:18'!
test02CanNotAddItemNotCreated
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 13:58:50' prior: 50627478!
test02CannotAddItemNotListedInMarket
	
	| carrito itemsList item item2 item3 |
	
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:01:16' prior: 50627516!
test01CartIsEmptyWhenCreated
	
	| carrito market |
	
	market := BookMarket new.
	carrito := Carrito for: market.
	
	self assert: carrito isEmpty! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:01:24' prior: 50627551!
test02CannotAddItemNotListedInMarket
	
	| carrito market itemsList item item2 item3 |
	
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := ItemBook withIsbn: 'hola' quantity:  2.
	item2 := ItemBook withIsbn: 'chau' quantity:  3.
	
	itemsList createItem: item.
	itemsList createItem: item2.

	item3 := ItemBook withIsbn: 'buenas' quantity:  1.
	
	
	self 

		should: [	carrito addToCart: item3 inList: itemsList]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		 ]

	! !

!classDefinition: #Book category: 'TusLibros' stamp: 'TM 6/8/2023 14:41:06'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:41:00' prior: 50627580!
test02CannotAddItemNotListedInMarket
	
	| carrito market book |
	
	carrito := Carrito new.
	market := BookMarket new.
	book := Book withISBN: 9783161484100.
	
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:41:34' prior: 50627572!
test01CartIsEmptyWhenCreated
	
	| carrito |
	
	carrito := Carrito new.
	
	self assert: carrito isEmpty! !

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 14:41:35'!
PASSED!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 14:41:35'!
PASSED!

!testRun: #CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 14:41:35'!
ERROR!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 14:41:35'!
PASSED!

!testRun: #CarritoTest #test04CartContainsOneItem stamp: 'TM 6/8/2023 14:41:35'!
PASSED!

!testRun: #CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 14:41:35'!
ERROR!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 14:41:39'!
PASSED!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 14:41:39'!
PASSED!

!testRun: #CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 14:41:39'!
ERROR!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 14:41:39'!
PASSED!

!testRun: #CarritoTest #test04CartContainsOneItem stamp: 'TM 6/8/2023 14:41:39'!
PASSED!

!testRun: #CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 14:41:39'!
ERROR!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 14:41:43'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:42:17' prior: 50627608!
test02CannotAddItemNotListedInMarket
	
	| carrito market book |
	
	market := BookMarket new.
	book := Book withISBN: 9783161484100.
	
	carrito := Carrito for: market.
	
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:42:25' prior: 50627667!
test02CannotAddItemNotListedInMarket
	
	| carrito market book |
	
	market := BookMarket new.	
	carrito := Carrito for: market.
	
	book := Book withISBN: 9783161484100.
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:42:32' prior: 50627682!
test02CannotAddItemNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market.
	
	book := Book withISBN: 9783161484100.
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:42:55' prior: 50627697!
test02CannotAddItemNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := Book withISBN: 9783161484100.
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:43:47'!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := Book withISBN: 9783161484100.
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !

!methodRemoval: CarritoTest #test02CannotAddItemNotListedInMarket stamp: 'TM 6/8/2023 14:43:47'!
test02CannotAddItemNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := Book withISBN: 9783161484100.
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:44:09'!
ERROR!
!ItemBook class methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 14:45:06'!
withISBN: anISBN
	^self new initializeWithISBN: anISBN.
! !

!methodRemoval: ItemBook class #withIsbn:quantity: stamp: 'TM 6/8/2023 14:45:17'!
withIsbn: aIsbn quantity:  aQuantity.
	^self new initializeWithIsbn: aIsbn quantity:  aQuantity.
!

Object subclass: #Item
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Item category: 'TusLibros' stamp: 'TM 6/8/2023 14:45:40'!
Object subclass: #Item
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Item subclass: #ItemBook
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Item subclass: #ItemBook
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #Item
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Item category: 'TusLibros' stamp: 'TM 6/8/2023 14:46:08'!
Object subclass: #Item
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Item subclass: #ItemBook
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ItemBook category: 'TusLibros' stamp: 'TM 6/8/2023 14:46:16'!
Item subclass: #ItemBook
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRenamed: #ItemBook as: #BookItem stamp: 'TM 6/8/2023 14:46:29'!
Smalltalk renameClassNamed: #ItemBook as: #BookItem!
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 14:46:29' prior: 50627079!
test03ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	item2 := BookItem withIsbn: 'chau' quantity:  3.
	item3 := BookItem withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item inList: itemsList.
	carrito addToCart: item2 inList: itemsList.
	carrito addToCart: item3 inList: itemsList.
	
	self assert: carrito elementos equals: itemsList items.! !
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 14:46:29' prior: 50627413!
test04CartContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item inList: itemsList.
	
	
	
	self assert: carrito elementos first equals: item.! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:46:58' prior: 50627727!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	market add: book.
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !

!classRemoval: #Book stamp: 'TM 6/8/2023 14:47:02'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:47:35' prior: 50627850!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	"market add: book."
		
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:47:39' prior: 50627871!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	"market add: book."
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:47:40'!
ERROR!

!classDefinition: #BookItem category: 'TusLibros' stamp: 'TM 6/8/2023 14:47:45'!
Item subclass: #BookItem
	instanceVariableNames: 'isbn quantity iSBN'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!BookItem methodsFor: 'initialize' stamp: 'TM 6/8/2023 14:47:45'!
initializeWithISBN: anISBN 
	self shouldBeImplemented.
	iSBN := anISBN.! !
!BookItem methodsFor: 'initialize' stamp: 'TM 6/8/2023 14:47:56' prior: 50627913!
initializeWithISBN: anISBN 
	isbn := anISBN.! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:48:24'!
FAILURE!

Item subclass: #BookItem
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #BookItem category: 'TusLibros' stamp: 'TM 6/8/2023 14:48:44'!
Item subclass: #BookItem
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!methodRemoval: BookItem #initializeWithIsbn:quantity: stamp: 'TM 6/8/2023 14:49:41'!
initializeWithIsbn: aIsbn quantity:  aQuantity
	isbn := aIsbn.
	quantity := aQuantity.!
!Carrito methodsFor: 'elements' stamp: 'TM 6/8/2023 14:51:35' prior: 50627131!
addToCart: anItem
	(market has: anItem)
	ifFalse: [  ].
	
	items add: anItem.! !
!Carrito methodsFor: 'elements' stamp: 'TM 6/8/2023 14:51:58' prior: 50627942!
addToCart: anItem
	(market has: anItem)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items add: anItem.! !
!Carrito methodsFor: 'elements' stamp: 'TM 6/8/2023 14:52:04' prior: 50627947!
addToCart: anItem

	(market has: anItem)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items add: anItem.! !

Market subclass: #BookMarket
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #BookMarket category: 'TusLibros' stamp: 'TM 6/8/2023 14:52:35'!
Market subclass: #BookMarket
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:53:14'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:53:14'!
FAILURE!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:53:46' prior: 50627887!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	"market add: book."
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: Carrito invalidItemErrorDescription.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:53:50'!
FAILURE!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:54:39' prior: 50627978!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	"market add: book."
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:54:40'!
FAILURE!
!Carrito class methodsFor: 'error' stamp: 'TM 6/8/2023 14:55:13' prior: 50627165!
invalidItemErrorDescription
	^'El item no está listado'! !
!BookMarket methodsFor: 'testing' stamp: 'TM 6/8/2023 14:56:33'!
has: aBook
	^False.! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:56:40'!
FAILURE!
!BookMarket methodsFor: 'testing' stamp: 'TM 6/8/2023 14:56:52' prior: 50628020!
has: aBook
	^False new.! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:56:56'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:56:56'!
FAILURE!
!BookMarket methodsFor: 'testing' stamp: 'TM 6/8/2023 14:57:10' prior: 50628027!
has: aBook
	^False.! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:57:20'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:57:20'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:57:30'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:57:54'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:58:18'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 14:58:25'!
FAILURE!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 14:59:58' prior: 50627997!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	"market add: book."
	
	carrito addToCart: book.
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 15:00:01'!
ERROR!

False!

False ifTrue: []!

false ifTrue: []!

false ifTrue: []!

false ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

true ifTrue: []!

false ifTrue: [] nil !

false ifFalse: []!

false ifFalse: [ ^'asd' ] !
!BookMarket methodsFor: 'testing' stamp: 'TM 6/8/2023 15:03:41' prior: 50628037!
has: aBook
	^false.! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 15:03:44'!
ERROR!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 15:03:44'!
ERROR!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:03:50' prior: 50628060!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market. "Carrito belongs to a certain market"
	
	book := BookItem withISBN: 9783161484100.
	"market add: book."
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 15:03:51'!
PASSED!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:03:51'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 15:03:51'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 15:03:51'!
ERROR!

!testRun: #CarritoTest #test04CartContainsOneItem stamp: 'TM 6/8/2023 15:03:51'!
ERROR!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:04:02' prior: 50628102!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:04:30'!
test03CanAddBookListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	market add: book.
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:04:55' prior: 50628147!
test03CanAddBookListedInMarket
	
	| market carrito book |
	
	market := BookMarket new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	market add: book.
	
	carrito addToCart: book.! !

!testRun: #CarritoTest #test03CanAddBookListedInMarket stamp: 'TM 6/8/2023 15:04:56'!
ERROR!
!BookMarket methodsFor: 'adding' stamp: 'TM 6/8/2023 15:05:07'!
add: book 
	self shouldBeImplemented.! !
!BookMarket methodsFor: 'adding' stamp: 'TM 6/8/2023 15:05:27' prior: 50628174!
add: aBook
	items add: aBook.! !

!testRun: #CarritoTest #test03CanAddBookListedInMarket stamp: 'TM 6/8/2023 15:05:36'!
ERROR!

!classRenamed: #BookMarket as: #BookListing stamp: 'TM 6/8/2023 15:07:59'!
Smalltalk renameClassNamed: #BookMarket as: #BookListing!
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 15:07:59' prior: 50628133!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookListing new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	
	self 
		should: [ carrito addToCart: book. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !
!CarritoTest methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 15:07:59' prior: 50628162!
test03CanAddBookListedInMarket
	
	| market carrito book |
	
	market := BookListing new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	market add: book.
	
	carrito addToCart: book.! !

Object subclass: #BookListing
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #BookListing category: 'TusLibros' stamp: 'TM 6/8/2023 15:08:07'!
Object subclass: #BookListing
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #BookItem
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #BookItem category: 'TusLibros' stamp: 'TM 6/8/2023 15:08:12'!
Object subclass: #BookItem
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Item stamp: 'TM 6/8/2023 15:08:28'!
Object subclass: #Item
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Market stamp: 'TM 6/8/2023 15:08:30'!
Object subclass: #Market
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!BookItem methodsFor: 'accessing' stamp: 'TM 6/8/2023 15:09:04'!
isbn
	^isbn! !
!BookListing methodsFor: 'initialization' stamp: 'TM 6/8/2023 15:09:44' overrides: 16920235!
initialize
	items := Set new! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:11:37' prior: 50628190!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookListing new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	
	self 
		should: [ carrito addISBN: 9783161484100. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:12:28'!
test02CannotAddBookNotListed
	
	| listing carrito |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	self 
		should: [ carrito addISBN: 9783161484100. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:12:37'!
FAILURE!
!Carrito methodsFor: 'elements' stamp: 'TM 6/8/2023 15:13:17'!
addISBN: anISBN

	(market hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items add: anISBN.! !
!BookListing methodsFor: 'testing' stamp: 'TM 6/8/2023 15:15:21' prior: 50628092!
has: anISBN
	^items includes: anISBN.! !
!BookListing methodsFor: 'adding' stamp: 'TM 6/8/2023 15:15:33' prior: 50628178!
add: anISBN
	items add: anISBN.! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:17:22' prior: 50628205!
test03CanAddBookListedInMarket
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing add: isbn.
	
	carrito addToCart: isbn.! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:18:03' prior: 50628269!
test02CannotAddBookNotListed
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	
	self 
		should: [ carrito addISBN: isbn. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:18:13'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:18:13'!
FAILURE!
!BookListing methodsFor: 'testing' stamp: 'TM 6/8/2023 15:19:08'!
hasISBN: anISBN
	^items includes: anISBN.! !

!methodRemoval: BookListing #has: stamp: 'TM 6/8/2023 15:19:08'!
has: anISBN
	^items includes: anISBN.!
!BookListing methodsFor: 'adding' stamp: 'TM 6/8/2023 15:19:21'!
addISBN: anISBN
	items add: anISBN.! !
!BookListing methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 15:19:21' prior: 50628295!
add: anISBN
	items addISBN: anISBN.! !
!BookListing methodsFor: 'as yet unclassified' stamp: 'TM 6/8/2023 15:19:21' prior: 50628334!
addISBN: anISBN
	items addISBN: anISBN.! !

!methodRemoval: BookListing #add: stamp: 'TM 6/8/2023 15:19:21'!
add: anISBN
	items addISBN: anISBN.!
!BookListing methodsFor: 'adding' stamp: 'TM 6/8/2023 15:19:35' prior: 50628344!
addISBN: anISBN
	items add: anISBN.! !

!methodRemoval: Carrito #addToCart: stamp: 'TM 6/8/2023 15:20:27'!
addToCart: anItem

	(market has: anItem)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items add: anItem.!

!methodRemoval: Carrito #addToCart:inList: stamp: 'TM 6/8/2023 15:20:29'!
addToCart: aItemBook inList: aList
	(self assertItemBookIsCreated: aItemBook inList: aList) 
		ifTrue: [ items add: aItemBook. ]
		ifFalse: [	 ^self error: self class invalidItemErrorDescription].
	!

!methodRemoval: Carrito #assertItemBookIsCreated:inList: stamp: 'TM 6/8/2023 15:20:30'!
assertItemBookIsCreated: aItemBook inList: aList
	^(aList items includes: aItemBook)!

!methodRemoval: Carrito #elementos stamp: 'TM 6/8/2023 15:20:32'!
elementos
	^items!
!Carrito methodsFor: 'initialization' stamp: 'TM 6/8/2023 15:20:50' prior: 50627148 overrides: 16920235!
initialize
	items := Dictionary new.! !

!classDefinition: #Carrito category: 'TusLibros' stamp: 'TM 6/8/2023 15:21:07'!
Object subclass: #Carrito
	instanceVariableNames: 'items market listing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Carrito methodsFor: 'initialization' stamp: 'TM 6/8/2023 15:21:06' prior: 50627358!
initializeFor: aListing
	listing := aListing.! !
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:21:27' prior: 50628284!
addISBN: anISBN

	(market hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items at: anISBN put: 1.! !
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 15:21:43' prior: 50627267!
isEmpty
	^items isEmpty.! !

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:21:50'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:21:52'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:21:52'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:22:03'!
FAILURE!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:22:03'!
FAILURE!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:22:46' prior: 50628395!
addISBN: anISBN

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items at: anISBN put: 1.! !

Object subclass: #Carrito
	instanceVariableNames: 'items listing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Carrito category: 'TusLibros' stamp: 'TM 6/8/2023 15:22:53'!
Object subclass: #Carrito
	instanceVariableNames: 'items listing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:23:02'!
PASSED!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:23:04'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:23:06'!
PASSED!

!methodRemoval: CarritoTest #test02CannotAddBookNotListedInMarket stamp: 'TM 6/8/2023 15:23:11'!
test02CannotAddBookNotListedInMarket
	
	| market carrito book |
	
	market := BookListing new.	
	carrito := Carrito for: market.
	
	book := BookItem withISBN: 9783161484100.
	
	self 
		should: [ carrito addISBN: 9783161484100. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:23:21'!
test02CannotAddBookNotInListing
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	
	self 
		should: [ carrito addISBN: isbn. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !

!methodRemoval: CarritoTest #test02CannotAddBookNotListed stamp: 'TM 6/8/2023 15:23:27'!
test02CannotAddBookNotListed
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	
	self 
		should: [ carrito addISBN: isbn. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:23:29'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:23:31'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookListedInMarket stamp: 'TM 6/8/2023 15:23:41'!
ERROR!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:23:52' prior: 50628299!
test03CanAddBookListedInMarket
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.! !

!testRun: #CarritoTest #test03CanAddBookListedInMarket stamp: 'TM 6/8/2023 15:23:53'!
PASSED!

!testRun: #CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:23:53'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:23:53'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookListedInMarket stamp: 'TM 6/8/2023 15:23:53'!
PASSED!

!testRun: #CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 15:23:53'!
ERROR!

!testRun: #CarritoTest #test04CartContainsOneItem stamp: 'TM 6/8/2023 15:23:53'!
ERROR!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:24:10'!
test03CanAddBookInListing
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.! !

!methodRemoval: CarritoTest #test03CanAddBookListedInMarket stamp: 'TM 6/8/2023 15:24:10'!
test03CanAddBookListedInMarket
	
	| listing carrito isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:24:27'!
test05ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	item2 := BookItem withIsbn: 'chau' quantity:  3.
	item3 := BookItem withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item inList: itemsList.
	carrito addToCart: item2 inList: itemsList.
	carrito addToCart: item3 inList: itemsList.
	
	self assert: carrito elementos equals: itemsList items.! !

!methodRemoval: CarritoTest #test03ListAllImtemsOfCart stamp: 'TM 6/8/2023 15:24:27'!
test03ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	item2 := BookItem withIsbn: 'chau' quantity:  3.
	item3 := BookItem withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item inList: itemsList.
	carrito addToCart: item2 inList: itemsList.
	carrito addToCart: item3 inList: itemsList.
	
	self assert: carrito elementos equals: itemsList items.!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:24:41'!
test01CarritoIsEmptyWhenCreated
	
	| carrito |
	
	carrito := Carrito new.
	
	self assert: carrito isEmpty! !

!methodRemoval: CarritoTest #test01CartIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:24:41'!
test01CartIsEmptyWhenCreated
	
	| carrito |
	
	carrito := Carrito new.
	
	self assert: carrito isEmpty!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:24:51'!
test04CarritoContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item inList: itemsList.
	
	
	
	self assert: carrito elementos first equals: item.! !

!methodRemoval: CarritoTest #test04CartContainsOneItem stamp: 'TM 6/8/2023 15:24:51'!
test04CartContainsOneItem
	
	| carrito item itemsList |
	carrito := Carrito new.
	
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	
	itemsList createItem: item.
	
	carrito addToCart: item inList: itemsList.
	
	
	
	self assert: carrito elementos first equals: item.!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:25:27' prior: 50628461!
test02CannotAddBookNotInListing
	
	| carrito listing isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	
	self 
		should: [ carrito addISBN: isbn. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:25:32' prior: 50628522!
test03CanAddBookInListing
	
	| carrito listing isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:27:44' prior: 50628592!
test04CarritoContainsOneItem
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 1.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito has: isbn).! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:27:52' prior: 50628638!
test04CarritoContainsOneItem
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 1.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:28:12' prior: 50628616!
test02CannotAddBookNotInListing
	
	| carrito listing isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	"listing addISBN: isbn."
	
	self 
		should: [ carrito addISBN: isbn. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]

	! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:28:59' prior: 50628648!
test04CarritoContainsOneItem
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:29:46'!
test04CarritoContainsItem
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).! !

!methodRemoval: CarritoTest #test04CarritoContainsOneItem stamp: 'TM 6/8/2023 15:29:46'!
test04CarritoContainsOneItem
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:29:57'!
test04CarritoContainsBook
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).! !

!methodRemoval: CarritoTest #test04CarritoContainsItem stamp: 'TM 6/8/2023 15:29:57'!
test04CarritoContainsItem
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:30:11'!
ERROR!
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 15:30:17'!
hasISBN: isbn 
	self shouldBeImplemented.! !
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 15:30:37' prior: 50628725!
hasISBN: anISBN
	^items includes: anISBN.! !

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:30:43'!
FAILURE!

| isbn dict |!

isbn := 9783161484100.!

dict := Dictionary new.!

dict at: isbn put: 1.!

dict keys!

dict includes: isbn.!

dict includes: isbn.!
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 15:33:57' prior: 50628729!
hasISBN: anISBN
	^items includesKey: anISBN.! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:33:58'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:33:58'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:33:58'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:33:58'!
PASSED!

!testRun: #CarritoTest #test05ListAllImtemsOfCart stamp: 'TM 6/8/2023 15:33:58'!
ERROR!

!testRun: #CarritoTest #test05ListAllImtemsOfCart stamp: 'TM 6/8/2023 15:33:58'!
ERROR!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:34:04'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:35:26'!
_ignore_test05ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	item2 := BookItem withIsbn: 'chau' quantity:  3.
	item3 := BookItem withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item inList: itemsList.
	carrito addToCart: item2 inList: itemsList.
	carrito addToCart: item3 inList: itemsList.
	
	self assert: carrito elementos equals: itemsList items.! !

!methodRemoval: CarritoTest #test05ListAllImtemsOfCart stamp: 'TM 6/8/2023 15:35:26'!
test05ListAllImtemsOfCart
	
	| carrito itemsList item item2 item3 |
	carrito := Carrito new.
	itemsList := ListBook new.
	item := BookItem withIsbn: 'hola' quantity:  2.
	item2 := BookItem withIsbn: 'chau' quantity:  3.
	item3 := BookItem withIsbn: 'buenas' quantity:  1.
	
	itemsList createItem: item.
	itemsList createItem: item2.
	itemsList createItem: item3.

	carrito addToCart: item inList: itemsList.
	carrito addToCart: item2 inList: itemsList.
	carrito addToCart: item3 inList: itemsList.
	
	self assert: carrito elementos equals: itemsList items.!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:35:29'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:35:29'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:35:29'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:35:29'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:37:06'!
test05CanAddBookWithQuantity
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn quantity: 10.	
	
	self assert: (carrito quantityOf: isbn).! !

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:37:08'!
ERROR!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:37:15'!
addISBN: isbn quantity: aRenameMe1 
	self shouldBeImplemented.! !
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:37:55' prior: 50628830!
addISBN: anISBN quantity: aPositiveQuantity 
	self shouldBeImplemented.! !
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:38:25' prior: 50628835!
addISBN: anISBN quantity: aQuantity

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	items at: anISBN put: aQuantity.! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:38:28'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:38:28'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:38:28'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:38:28'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:38:28'!
ERROR!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:38:28'!
ERROR!
!Carrito methodsFor: 'testing' stamp: 'TM 6/8/2023 15:38:34'!
quantityOf: isbn 
	self shouldBeImplemented.! !
!Carrito methodsFor: 'accessing' stamp: 'TM 6/8/2023 15:39:11' prior: 50628865!
quantityOf: anISBN 
	^items at: anISBN.! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:39:41' prior: 50628817!
test05CanAddBookWithQuantity
	
	| carrito listing isbn quantity |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	quantity := 10.
	carrito addISBN: isbn quantity: quantity.	
	
	self assert: quantity equals: (carrito quantityOf: isbn).! !

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:39:43'!
PASSED!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:39:43'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:39:43'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:39:43'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:39:43'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:39:43'!
PASSED!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:39:49'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:39:49'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:39:49'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:39:49'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:39:49'!
PASSED!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:40:05' prior: 50628420!
addISBN: anISBN

	self addISBN: anISBN quantity: 1! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:40:06'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:40:06'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:40:06'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:40:06'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:40:06'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:41:49'!
test06CannotAddNonPositiveQuantities
	
	| carrito listing isbn quantity |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	quantity := 10.
	carrito addISBN: isbn quantity: quantity.	
	
	self assert: quantity equals: (carrito quantityOf: isbn).! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:42:21'!
test04CarritoContainsAddedBook
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).! !

!methodRemoval: CarritoTest #test04CarritoContainsBook stamp: 'TM 6/8/2023 15:42:21'!
test04CarritoContainsBook
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	
	self assert: (carrito hasISBN: isbn).!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:42:48' prior: 50628936!
test06CannotAddNonPositiveQuantities
	
	| carrito listing isbn quantity |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	quantity := 0.
	carrito addISBN: isbn quantity: quantity.	
	
	self assert: quantity equals: (carrito quantityOf: isbn).! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:42:54'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:42:54'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:42:54'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:42:54'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:42:54'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:42:54'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:43:05' prior: 50628658!
test02CannotAddBookNotInListing
	
	| carrito listing isbn |
	
	listing := BookListing new.	
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	"listing addISBN: isbn."
	
	self 
		should: [ carrito addISBN: isbn. ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidItemErrorDescription equals: anError messageText.
		]! !
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:43:35' prior: 50628969!
test06CannotAddNonPositiveQuantities
	
	| carrito listing isbn quantity |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	quantity := 0.
	carrito addISBN: isbn quantity: quantity.	
	
	self 
		should: [ carrito addISBN: isbn quantity: quantity.	 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidQuantityErrorDescription equals: anError messageText.
		]! !

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:43:40'!
FAILURE!
!Carrito class methodsFor: 'error' stamp: 'TM 6/8/2023 15:44:19'!
invalidQuantityErrorDescription
	^'La cantidad especificada es inválida!!'! !
!Carrito class methodsFor: 'error' stamp: 'TM 6/8/2023 15:44:24' prior: 50628016!
invalidItemErrorDescription
	^'El item no está listado'! !
!Carrito class methodsFor: 'error' stamp: 'TM 6/8/2023 15:44:27' prior: 50629034!
invalidQuantityErrorDescription
	^'La cantidad especificada es inválida'! !

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:44:33'!
FAILURE!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:44:33'!
FAILURE!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:44:47' prior: 50629014!
test06CannotAddNonPositiveQuantities
	
	| carrito listing isbn quantity |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	quantity := 0.
	
	self 
		should: [ carrito addISBN: isbn quantity: quantity.	 ]
		raise: Error
		withExceptionDo: [ :anError |
			self assert: Carrito invalidQuantityErrorDescription equals: anError messageText.
		]! !

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:44:49'!
FAILURE!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:44:53'!
FAILURE!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:44:54'!
FAILURE!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:45:41' prior: 50628840!
addISBN: anISBN quantity: aPositiveQuantity

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	(aPositiveQuantity < 1)
	ifFalse: [ ^self error: Carrito invalidQuantityErrorDescription ].
	
	items at: anISBN put: aPositiveQuantity.! !

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:45:44'!
FAILURE!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:45:44'!
FAILURE!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:45:55'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:45:55'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:45:55'!
ERROR!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:45:55'!
ERROR!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:45:55'!
ERROR!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:45:55'!
FAILURE!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:46:07' prior: 50629082!
addISBN: anISBN quantity: aPositiveQuantity

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	(aPositiveQuantity < 1)
	ifTrue: [ ^self error: Carrito invalidQuantityErrorDescription ].
	
	items at: anISBN put: aPositiveQuantity.! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:46:08'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:46:08'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:46:08'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:46:08'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:46:08'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:46:08'!
PASSED!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:46:10'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:46:10'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:46:10'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:46:10'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:46:10'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:46:10'!
PASSED!
!CarritoTest methodsFor: 'tests' stamp: 'TM 6/8/2023 15:47:47'!
test07CanAddBookMultipleTimes
	
	| carrito listing isbn |
	
	listing := BookListing new.
	carrito := Carrito for: listing.
	
	isbn := 9783161484100.
	listing addISBN: isbn.
	
	carrito addISBN: isbn.	
	carrito addISBN: isbn.	
	
	self assert: 2 equals: (carrito quantityOf: isbn).! !

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:47:48'!
FAILURE!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:47:53'!
FAILURE!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:51:39' prior: 50629118!
addISBN: anISBN quantity: aPositiveQuantity

	| quantity |

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	(aPositiveQuantity < 1)
	ifTrue: [ ^self error: Carrito invalidQuantityErrorDescription ].
	
	quantity := aPositiveQuantity.
	
	items at: anISBN
	ifPresent: [ quantity := quantity + items at: anISBN. ].
	
	items at: anISBN put: quantity.! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:51:42'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:51:42'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:51:42'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:51:42'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:51:42'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:51:42'!
PASSED!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:51:42'!
ERROR!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:51:42'!
ERROR!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:52:40' prior: 50629183!
addISBN: anISBN quantity: aPositiveQuantity

	| quantity |

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	(aPositiveQuantity < 1)
	ifTrue: [ ^self error: Carrito invalidQuantityErrorDescription ].
	
	quantity := aPositiveQuantity.
	
	items at: anISBN
	ifPresent: [ :currentQuantity | quantity := quantity + currentQuantity. ].
	
	items at: anISBN put: quantity.! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:52:42'!
PASSED!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:52:44'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:52:44'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:52:44'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:52:44'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:52:44'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:52:44'!
PASSED!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:52:44'!
PASSED!
!Carrito methodsFor: 'adding' stamp: 'TM 6/8/2023 15:53:22' prior: 50629222!
addISBN: anISBN quantity: aPositiveQuantity

	| finalQuantity |

	(listing hasISBN: anISBN)
	ifFalse: [ ^self error: Carrito invalidItemErrorDescription ].
	
	(aPositiveQuantity < 1)
	ifTrue: [ ^self error: Carrito invalidQuantityErrorDescription ].
	
	finalQuantity := aPositiveQuantity.
	
	items at: anISBN
	ifPresent: [ :currentQuantity | finalQuantity := finalQuantity + currentQuantity. ].
	
	items at: anISBN put: finalQuantity.! !

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:53:24'!
PASSED!

!testRun: #CarritoTest #test01CarritoIsEmptyWhenCreated stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

!testRun: #CarritoTest #test02CannotAddBookNotInListing stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

!testRun: #CarritoTest #test03CanAddBookInListing stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

!testRun: #CarritoTest #test04CarritoContainsAddedBook stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

!testRun: #CarritoTest #test05CanAddBookWithQuantity stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

!testRun: #CarritoTest #test06CannotAddNonPositiveQuantities stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

!testRun: #CarritoTest #test07CanAddBookMultipleTimes stamp: 'TM 6/8/2023 15:53:29'!
PASSED!

----SNAPSHOT----(8 June 2023 15:53:32) CuisUniversity-5832.image priorSource: 9458866!

----SNAPSHOT----(8 June 2023 15:53:39) CuisUniversity-5832.image priorSource: 9525959!